<?php

namespace Backend\Controller;

use Backend\Base\BackendController;
use Backend\Utility\Utils;
use Cake\Core\Configure;

class {{pluralName}}Controller extends BackendController {
    {% if isUpload %}
    use \Backend\Base\BaseService;
    {% endif %}
    public $indexConfig = [
        'contains' => '{{contains}}',
        'limit' => {{limit}},
        'finder' => '{{underSName}}ByString',
        'fields' => [
            {% for nameField,option in indexField%}
            '{{nameField}}' => [
                        'label' => '{{option.label}}',
                    {% if not(option.format is empty) %}
                        'format' => '{{option.format|raw}}',
                    {% endif %}
                    {% if option.type == 'checkbox' %}
                        'render' => 'switch',
                    {% endif %}
                    {% if option.type == 'image' %}
                        'render' => 'image',
                    {% endif %}
                ],
            {% endfor %}
        ]
    ];
    {% if not(submitField is empty) %}
    protected $fieldsSubmit = [
        {% for nameField,option in submitField %}
            '{{nameField}}' => [
                    'label' => '{{option.label}}',
                    'type' => '{{option.type}}',
                    {% if not(option.require is empty) %}
                        'require' => 'true',
                    {% endif %}
                    {% if option.type == 'image' %}
                        'format' => 'link{{nameField | capitalize}}',
                    {% endif %}
                ],
        {% endfor %}
    ];
    {% endif %}
    {% if not(multiLangField is empty) %}
    protected $multiLangFieldSubmit = [
        {% for nameField,option in multiLangField %}
            '{{nameField}}' => [
                    'label' => '{{option.label}}',
                    'type' => '{{option.type}}',
                    {% if not(option.require is empty) %}
                        'require' => 'true',
                    {% endif %}
                    {% if option.type == 'image' %}
                        'format' => 'link{{nameField | capitalize}}',
                    {% endif %}
                ],
        {% endfor %}
    ];
    {% endif %}
     
    {% if not(contains is empty) %}
    protected function prepareObject($id) {
        $entityModel = $this->{{pluralName}}->get($id, [
            'contain' => [
                '{{contains}}'
            ]
        ]);
        return $entityModel;
    }
    {% endif %}

}
